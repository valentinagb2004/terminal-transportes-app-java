/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Controladores.ControladorGestionBuses;
import Controladores.ControladorPrincipal;
import Excepciones.BusExisteException;
import Excepciones.SinPlazasEstacionamientoException;
import Modelo.Bus;
import Modelo.Caseta;
import Modelo.Usuario;
import Util.Lista;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Valentina
 */
public class VentanaGestionBuses extends javax.swing.JFrame {

    /**
     * Creates new form VentanaGestionBuses
     */
    
    private ControladorPrincipal controladorPrincipal;
    private ControladorGestionBuses controladorGestionBuses;
    
    public VentanaGestionBuses(ControladorPrincipal controladorPrincipal) {
        initComponents();
        this.controladorPrincipal = controladorPrincipal;
        
        Usuario usuarioLogueado = this.controladorPrincipal.getUsuariologin();
        Caseta caseta = controladorPrincipal.buscarCaseta(usuarioLogueado.getCedula());
        this.controladorGestionBuses = new ControladorGestionBuses(caseta);
        this.llenarTabla();
    }
    private void llenarTabla() {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"Placa", "Puestos Disponibles", "Marca", "Color", "tiene Wifi"});
        
        Lista<Bus> lista = controladorGestionBuses.getListaBuses();
        for (int i = 0; i < lista.size(); i++) {
            Bus bus = lista.get(i);
            model.addRow(new Object[]{
                bus.getPlaca(),
                bus.getPuestosDisponibles(),
                bus.getMarca(),
                bus.getColor(),
                bus.getWifi()
            });
        }
        tabla.setModel(model);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPlaca = new javax.swing.JTextField();
        txtPuestosDisp = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnVolver = new javax.swing.JButton();
        txtTieneWifi = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtPlaca.setBorder(javax.swing.BorderFactory.createTitledBorder("Placa"));

        txtPuestosDisp.setBorder(javax.swing.BorderFactory.createTitledBorder("Puestos disponibles"));

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        txtTieneWifi.setBorder(javax.swing.BorderFactory.createTitledBorder("Tiene wifi?"));

        txtMarca.setBorder(javax.swing.BorderFactory.createTitledBorder("Marca"));

        txtColor.setBorder(javax.swing.BorderFactory.createTitledBorder("Color"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtPuestosDisp, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                        .addComponent(txtPlaca))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTieneWifi, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPuestosDisp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTieneWifi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCrear)
                            .addComponent(btnVolver))
                        .addGap(33, 33, 33))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        VentanaMenuAdminFlota adminFlota = new VentanaMenuAdminFlota(controladorPrincipal);
        adminFlota.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private boolean validarCampos() {
        String placa = txtPlaca.getText();
        String puestosDispo = txtPuestosDisp.getText();
        String marca = txtMarca.getText();
        String color = txtColor.getText();
        String tieneWifi = txtTieneWifi.getText();

        if (placa.trim().equals("") || puestosDispo.trim().equals("") || marca.trim().equals("") || color.trim().equals("") 
                || tieneWifi.trim().equals("")) {
            return false;
        }
        return true;
    }
    
    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        
        if (validarCampos()) {

            try {
                String placa = txtPlaca.getText().toLowerCase();
                String puestosDispo = txtPuestosDisp.getText();
                String marca = txtMarca.getText();
                String color = txtColor.getText();
                String tieneWifi = txtTieneWifi.getText();

                boolean existePlacaGeneral = controladorPrincipal.verificarExistenciaPlaca(placa);
                if(existePlacaGeneral){
                    JOptionPane.showMessageDialog(null, "Esta placa ya esta registrada en la terminal");
                    return;
                }

                int puestos = Integer.parseInt(puestosDispo);
                Bus bus = new Bus(placa, puestos, color, marca, tieneWifi);
                controladorGestionBuses.agregarBus(bus);
                controladorPrincipal.guardarCambios();
                this.llenarTabla();
                JOptionPane.showMessageDialog(null, "El bus ha sido registrado");
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Ingrese un numero valido");
            } catch (SinPlazasEstacionamientoException | BusExisteException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }

        }else{
            JOptionPane.showMessageDialog(null, "Ingrese todos los campos");
        }
        
    }//GEN-LAST:event_btnCrearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnVolver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtPuestosDisp;
    private javax.swing.JTextField txtTieneWifi;
    // End of variables declaration//GEN-END:variables
}
